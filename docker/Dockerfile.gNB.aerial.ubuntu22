#/*
# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the OAI Public License, Version 1.1  (the "License"); you may not use this file
# * except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *      http://www.openairinterface.org/?page_id=698
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
# Dockerfile for the Open-Air-Interface BUILD service
#   Valid for Ubuntu 22.04
#
#---------------------------------------------------------------------

FROM ran-base:latest as ran-build

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes \
       wget \
       ninja-build \
       #unzip is needed for protobuf
       unzip \
       moreutils \
       vim-tiny \
       nano \
       # To build libnvipc
       cmake libpcap-dev libcunit1-dev libnuma-dev pkg-config

RUN rm -Rf /oai-ran
WORKDIR /oai-ran
COPY . .

RUN /bin/sh oaienv && \
    tar -xvzf nvipc_src.*.tar.gz && \
    cd nvipc_src.* && \
    rm -rf build && mkdir build && cd build && \
    cmake .. -DNVIPC_DPDK_ENABLE=OFF -DNVIPC_DOCA_ENABLE=OFF -DNVIPC_CUDA_ENABLE=OFF -DENABLE_SLT_RSP=ON && \
    make -j && make install

RUN /bin/sh oaienv && \
    cd cmake_targets && \
    mkdir -p log && \
    ./build_oai -w AERIAL --gNB --ninja


#start from scratch for target executable
FROM ubuntu:jammy as oai-gnb-aerial
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes \
        software-properties-common \
        procps \
        libsctp1 \
        tzdata \
        libblas3 \
        libconfig9 \
        openssl \
        net-tools \
        iperf \
        iproute2 \
        iputils-ping \
        gdb \
        moreutils \
        libusb-1.0-0 && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /opt/oai-gnb/bin
COPY --from=ran-build \
    /oai-ran/cmake_targets/ran_build/build/nr-softmodem ./
COPY ./docker/scripts/gnb_entrypoint.sh ./entrypoint.sh

COPY --from=ran-build /oai-ran/cmake_targets/ran_build/build/libparams_libconfig.so /usr/local/lib/

#copy files from nvIPC
COPY --from=ran-build \
    /usr/local/lib/libfmtlog-shared.so \
    /usr/local/lib/libnvlog.so \
    /usr/local/lib/libnvipc.so \
    /usr/local/lib/

RUN ldconfig && \
    echo "---- ldd on nr-softmodem ----" && \
    ldd /opt/oai-gnb/bin/nr-softmodem && \
    echo "---- ldd on shared libraries ----" && \
    ldd /usr/local/lib/libparams_libconfig.so \
        /usr/local/lib/libfmtlog-shared.so \
        /usr/local/lib/libnvlog.so \
        /usr/local/lib/libnvipc.so

WORKDIR /opt/oai-gnb
COPY --from=ran-build /tini /tini
ENTRYPOINT ["/tini", "-v", "--", "/opt/oai-gnb/bin/entrypoint.sh"]
CMD ["/opt/oai-gnb/bin/nr-softmodem", "-O", "/opt/oai-gnb/etc/gnb.conf"]
