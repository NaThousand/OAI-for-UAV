{"remainingRequest":"D:\\qianduan1\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\qianduan1\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\qianduan1\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\qianduan1\\vue-admin-template\\src\\components\\CubeView\\ThreeDView.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\qianduan1\\vue-admin-template\\src\\components\\CubeView\\ThreeDView.vue","mtime":1726312583139},{"path":"D:\\qianduan1\\vue-admin-template\\babel.config.js","mtime":1722767618549},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1722767764221},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1722767764222},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1722767764221},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1722767762512}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJzsKaW1wb3J0IHsgT3JiaXRDb250cm9scyB9IGZyb20gJ3RocmVlL2V4YW1wbGVzL2pzbS9jb250cm9scy9PcmJpdENvbnRyb2xzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUaHJlZURWaWV3JywKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0VGhyZWVEVmlldygpOwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdFRocmVlRFZpZXc6IGZ1bmN0aW9uIGluaXRUaHJlZURWaWV3KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICAvLyDliJvlu7rlnLrmma8KICAgICAgdmFyIHNjZW5lID0gbmV3IFRIUkVFLlNjZW5lKCk7CiAgICAgIHNjZW5lLmJhY2tncm91bmQgPSBuZXcgVEhSRUUuQ29sb3IoMHhmZmZmZmYpOyAvLyDorr7nva7og4zmma/kuLrnmb3oibIKCiAgICAgIC8vIOWIm+W7uuebuOacugogICAgICB2YXIgY2FtZXJhID0gbmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhKDc1LCB0aGlzLiRyZWZzLnRocmVlRFZpZXcuY2xpZW50V2lkdGggLyB0aGlzLiRyZWZzLnRocmVlRFZpZXcuY2xpZW50SGVpZ2h0LCAwLjEsIDEwMDApOwogICAgICBjYW1lcmEucG9zaXRpb24uc2V0KDAsIDAuNSwgMik7IC8vIOiuvue9ruebuOacuuS9jee9rgogICAgICBjYW1lcmEubG9va0F0KG5ldyBUSFJFRS5WZWN0b3IzKDAsIDAuNSwgMCkpOyAvLyDkvb/nm7jmnLrogZrnhKblnKjnq4vmlrnkvZPkuK3lv4MKICAgICAgLy8gIGNhbWVyYS5wb3NpdGlvbi56ID0gMiAvLyDosIPmlbTnm7jmnLrkvY3nva7ku6Xlop7liqDnq4vmlrnkvZPljaDmr5QKCiAgICAgIC8vIOWIm+W7uua4suafk+WZqAogICAgICB2YXIgcmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcih7CiAgICAgICAgYWxwaGE6IHRydWUKICAgICAgfSk7CiAgICAgIHJlbmRlcmVyLnNldFNpemUodGhpcy4kcmVmcy50aHJlZURWaWV3LmNsaWVudFdpZHRoLCB0aGlzLiRyZWZzLnRocmVlRFZpZXcuY2xpZW50SGVpZ2h0KTsKICAgICAgdGhpcy4kcmVmcy50aHJlZURWaWV3LmFwcGVuZENoaWxkKHJlbmRlcmVyLmRvbUVsZW1lbnQpOwoKICAgICAgLy8g5Yib5bu65q2j5pa55L2T5Yeg5L2V5L2TCiAgICAgIHZhciBnZW9tZXRyeSA9IG5ldyBUSFJFRS5Cb3hHZW9tZXRyeSgxLCAxLCAxKTsKCiAgICAgIC8vIOWIm+W7uua3oemdkuiJsuadkOi0qAogICAgICB2YXIgbWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoewogICAgICAgIGNvbG9yOiAweGUwZmZmZiwKICAgICAgICAvLyDmt6HpnZLoibIgKGxpZ2h0IGN5YW4pCiAgICAgICAgdHJhbnNwYXJlbnQ6IHRydWUsCiAgICAgICAgb3BhY2l0eTogMC41IC8vIOiuvue9rumAj+aYjuW6pgogICAgICB9KTsKCiAgICAgIC8vIOWIm+W7uue9keagvOW5tua3u+WKoOWIsOWcuuaZr+S4rQogICAgICB2YXIgY3ViZSA9IG5ldyBUSFJFRS5NZXNoKGdlb21ldHJ5LCBtYXRlcmlhbCk7CiAgICAgIHNjZW5lLmFkZChjdWJlKTsKCiAgICAgIC8vIOWIm+W7uue6v+ahhuadkOi0qOW5tua3u+WKoOWIsOWcuuaZr+S4rQogICAgICB2YXIgZWRnZXMgPSBuZXcgVEhSRUUuRWRnZXNHZW9tZXRyeShnZW9tZXRyeSk7CiAgICAgIHZhciBsaW5lTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoewogICAgICAgIGNvbG9yOiAweDAwMDBmZgogICAgICB9KTsgLy8g6JOd6Imy57q/5p2hCiAgICAgIHZhciBsaW5lU2VnbWVudHMgPSBuZXcgVEhSRUUuTGluZVNlZ21lbnRzKGVkZ2VzLCBsaW5lTWF0ZXJpYWwpOwogICAgICBsaW5lU2VnbWVudHMucG9zaXRpb24ueSA9IDAuNTsgLy8g5LiO56uL5pa55L2T5L2N572u5ZCM5q2lCiAgICAgIHNjZW5lLmFkZChsaW5lU2VnbWVudHMpOwoKICAgICAgLy8g5Yib5bu65LiJ57u05Z2Q5qCH6L20CiAgICAgIHRoaXMuY3JlYXRlQXhlcyhzY2VuZSk7CgogICAgICAvLyDliJvlu7ogT3JiaXRDb250cm9scyDmjqfku7YKICAgICAgdmFyIGNvbnRyb2xzID0gbmV3IE9yYml0Q29udHJvbHMoY2FtZXJhLCByZW5kZXJlci5kb21FbGVtZW50KTsKICAgICAgY29udHJvbHMuZW5hYmxlRGFtcGluZyA9IHRydWU7IC8vIOWQr+eUqOmYu+WwvOaViOaenO+8iOaDr+aAp++8iQogICAgICBjb250cm9scy5kYW1waW5nRmFjdG9yID0gMC4yNTsKICAgICAgY29udHJvbHMuc2NyZWVuU3BhY2VQYW5uaW5nID0gZmFsc2U7CiAgICAgIGNvbnRyb2xzLm1heFBvbGFyQW5nbGUgPSBNYXRoLlBJIC8gMjsKICAgICAgY29udHJvbHMudGFyZ2V0LnNldCgwLCAwLjUsIDApOyAvLyDlsIbmjqfliLbnm67moIforr7nva7kuLrnq4vmlrnkvZPkuK3lv4MKICAgICAgY29udHJvbHMudXBkYXRlKCk7IC8vIOabtOaWsOaOp+WItuWZqO+8jOS9v+iuvue9rueUn+aViAogICAgICBjdWJlLnBvc2l0aW9uLnkgPSAwLjU7IC8vIOiwg+aVtOeri+aWueS9k+eahOS9jee9ru+8jOS9v+S4reW/g+S9jeS6juW6lemDqOW5s+mdogoKICAgICAgLy8g5riy5p+T5b6q546vCiAgICAgIHZhciBfYW5pbWF0ZSA9IGZ1bmN0aW9uIGFuaW1hdGUoKSB7CiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKF9hbmltYXRlKTsKICAgICAgICBjb250cm9scy51cGRhdGUoKTsgLy8g5LuF5pu05paw5o6n5Yi25ZmoCgogICAgICAgIHJlbmRlcmVyLnJlbmRlcihzY2VuZSwgY2FtZXJhKTsKICAgICAgfTsKICAgICAgX2FuaW1hdGUoKTsKCiAgICAgIC8vIOeql+WPo+iwg+aVtOaXtuabtOaWsOa4suafk+WZqOWSjOebuOacugogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciB3aWR0aCA9IF90aGlzLiRyZWZzLnRocmVlRFZpZXcuY2xpZW50V2lkdGg7CiAgICAgICAgdmFyIGhlaWdodCA9IF90aGlzLiRyZWZzLnRocmVlRFZpZXcuY2xpZW50SGVpZ2h0OwogICAgICAgIGNhbWVyYS5hc3BlY3QgPSB3aWR0aCAvIGhlaWdodDsKICAgICAgICBjYW1lcmEudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpOwogICAgICAgIHJlbmRlcmVyLnNldFNpemUod2lkdGgsIGhlaWdodCk7CiAgICAgIH0pOyAvLyAuLi4gVGhyZWUuanMg5Luj56CB5LiO5LmL5YmN55u45ZCMCiAgICB9LAogICAgY3JlYXRlQXhlczogZnVuY3Rpb24gY3JlYXRlQXhlcyhzY2VuZSkgewogICAgICB2YXIgYXhpc0xlbmd0aCA9IDEuMDsKICAgICAgdmFyIGFycm93TGVuZ3RoID0gMC4yOwogICAgICB2YXIgYXJyb3dIZWFkTGVuZ3RoID0gMC4wNTsKICAgICAgdmFyIGFycm93SGVhZFdpZHRoID0gMC4wNTsKCiAgICAgIC8vIFjovbTvvJrnuqLoibIKICAgICAgdGhpcy5jcmVhdGVBeGlzKHNjZW5lLCBuZXcgVEhSRUUuVmVjdG9yMygxLCAwLCAwKSwgMHhmZjAwMDAsIGF4aXNMZW5ndGgsIGFycm93TGVuZ3RoLCBhcnJvd0hlYWRMZW5ndGgsIGFycm93SGVhZFdpZHRoKTsKCiAgICAgIC8vIFnovbTvvJrnu7/oibIKICAgICAgdGhpcy5jcmVhdGVBeGlzKHNjZW5lLCBuZXcgVEhSRUUuVmVjdG9yMygwLCAxLCAwKSwgMHgwMGZmMDAsIGF4aXNMZW5ndGggKyAwLjMsIGFycm93TGVuZ3RoLCBhcnJvd0hlYWRMZW5ndGgsIGFycm93SGVhZFdpZHRoKTsKCiAgICAgIC8vIFrovbTvvJrok53oibIKICAgICAgdGhpcy5jcmVhdGVBeGlzKHNjZW5lLCBuZXcgVEhSRUUuVmVjdG9yMygwLCAwLCAxKSwgMHgwMDAwZmYsIGF4aXNMZW5ndGgsIGFycm93TGVuZ3RoLCBhcnJvd0hlYWRMZW5ndGgsIGFycm93SGVhZFdpZHRoKTsgLy8gLi4uIOiHquWumuS5ieWdkOagh+i9tOS7o+eggeS4juS5i+WJjeebuOWQjAogICAgfSwKICAgIGNyZWF0ZUF4aXM6IGZ1bmN0aW9uIGNyZWF0ZUF4aXMoc2NlbmUsIGRpcmVjdGlvbiwgY29sb3IsIGF4aXNMZW5ndGgsIGFycm93TGVuZ3RoLCBhcnJvd0hlYWRMZW5ndGgsIGFycm93SGVhZFdpZHRoKSB7CiAgICAgIC8vIC4uLiDoh6rlrprkuYnlnZDmoIfovbTku6PnoIHkuI7kuYvliY3nm7jlkIwKICAgICAgLy8g5q2j5Y2K6L20566t5aS0CiAgICAgIHZhciBhcnJvd0hlbHBlciA9IG5ldyBUSFJFRS5BcnJvd0hlbHBlcihkaXJlY3Rpb24sIG5ldyBUSFJFRS5WZWN0b3IzKDAsIDAsIDApLCBheGlzTGVuZ3RoLCBjb2xvciwgYXJyb3dIZWFkTGVuZ3RoLCBhcnJvd0hlYWRXaWR0aCk7CiAgICAgIHNjZW5lLmFkZChhcnJvd0hlbHBlcik7CgogICAgICAvLyDotJ/ljYrovbTnur/mrrUKICAgICAgaWYgKGRpcmVjdGlvbi55ID09PSAwKSB7CiAgICAgICAgdmFyIGxpbmVNYXRlcmlhbCA9IG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7CiAgICAgICAgICBjb2xvcjogY29sb3IKICAgICAgICB9KTsKICAgICAgICB2YXIgbGluZUdlb21ldHJ5ID0gbmV3IFRIUkVFLkJ1ZmZlckdlb21ldHJ5KCkuc2V0RnJvbVBvaW50cyhbbmV3IFRIUkVFLlZlY3RvcjMoMCwgMCwgMCksIGRpcmVjdGlvbi5jbG9uZSgpLm11bHRpcGx5U2NhbGFyKC1heGlzTGVuZ3RoKSAvLyAuYWRkKG5ldyBUSFJFRS5WZWN0b3IzKDAsIC0wLjUsIDApKQogICAgICAgIC8vIGRpcmVjdGlvbi5jbG9uZSgpLm11bHRpcGx5U2NhbGFyKC1heGlzTGVuZ3RoKQogICAgICAgIF0pOwogICAgICAgIHZhciBsaW5lID0gbmV3IFRIUkVFLkxpbmUobGluZUdlb21ldHJ5LCBsaW5lTWF0ZXJpYWwpOwogICAgICAgIHNjZW5lLmFkZChsaW5lKTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"names":["THREE","OrbitControls","name","mounted","initThreeDView","methods","_this","scene","Scene","background","Color","camera","PerspectiveCamera","$refs","threeDView","clientWidth","clientHeight","position","set","lookAt","Vector3","renderer","WebGLRenderer","alpha","setSize","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","transparent","opacity","cube","Mesh","add","edges","EdgesGeometry","lineMaterial","LineBasicMaterial","lineSegments","LineSegments","y","createAxes","controls","enableDamping","dampingFactor","screenSpacePanning","maxPolarAngle","Math","PI","target","update","animate","requestAnimationFrame","render","window","addEventListener","width","height","aspect","updateProjectionMatrix","axisLength","arrowLength","arrowHeadLength","arrowHeadWidth","createAxis","direction","arrowHelper","ArrowHelper","lineGeometry","BufferGeometry","setFromPoints","clone","multiplyScalar","line","Line"],"sources":["src/components/CubeView/ThreeDView.vue"],"sourcesContent":["<!-- <template>\r\n  <div ref=\"threeDView\" style=\"width: 100%; height: 100%\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nexport default {\r\n  name: \"ThreeDView\",\r\n  mounted() {\r\n    this.initThreeDView();\r\n  },\r\n  methods: {\r\n    initThreeDView() {\r\n      // 创建场景\r\n      const scene = new THREE.Scene();\r\n      scene.background = new THREE.Color(0xffffff); // 设置背景为白色\r\n\r\n      // 创建相机\r\n      const camera = new THREE.PerspectiveCamera(\r\n        75,\r\n        this.$refs.threeDView.clientWidth / this.$refs.threeDView.clientHeight,\r\n        0.1,\r\n        1000\r\n      );\r\n      camera.position.z = 2; // 调整相机位置以增加立方体占比\r\n\r\n      // 创建渲染器\r\n      const renderer = new THREE.WebGLRenderer({ alpha: true });\r\n      renderer.setSize(\r\n        this.$refs.threeDView.clientWidth,\r\n        this.$refs.threeDView.clientHeight\r\n      );\r\n      this.$refs.threeDView.appendChild(renderer.domElement);\r\n\r\n      // 创建正方体几何体\r\n      const geometry = new THREE.BoxGeometry(1, 1, 1);\r\n\r\n      // 创建淡青色材质\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: 0xe0ffff, // 淡青色 (light cyan)\r\n        transparent: true,\r\n        opacity: 0.5, // 设置透明度\r\n      });\r\n\r\n      // 创建网格并添加到场景中\r\n      const cube = new THREE.Mesh(geometry, material);\r\n      scene.add(cube);\r\n\r\n      // 创建线框材质并添加到场景中\r\n      const edges = new THREE.EdgesGeometry(geometry);\r\n      const lineMaterial = new THREE.LineBasicMaterial({ color: 0x0000ff }); // 蓝色线条\r\n      const lineSegments = new THREE.LineSegments(edges, lineMaterial);\r\n      scene.add(lineSegments);\r\n\r\n      // 创建三维坐标轴\r\n      this.createAxes(scene);\r\n\r\n      // 创建 OrbitControls 控件\r\n      const controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.enableDamping = true; // 启用阻尼效果（惯性）\r\n      controls.dampingFactor = 0.25;\r\n      controls.screenSpacePanning = false;\r\n      controls.maxPolarAngle = Math.PI / 2;\r\n\r\n      // 渲染循环\r\n      const animate = () => {\r\n        requestAnimationFrame(animate);\r\n\r\n        controls.update(); // 仅更新控制器\r\n\r\n        renderer.render(scene, camera);\r\n      };\r\n\r\n      animate();\r\n\r\n      // 窗口调整时更新渲染器和相机\r\n      window.addEventListener(\"resize\", () => {\r\n        const width = this.$refs.threeDView.clientWidth;\r\n        const height = this.$refs.threeDView.clientHeight;\r\n\r\n        camera.aspect = width / height;\r\n        camera.updateProjectionMatrix();\r\n\r\n        renderer.setSize(width, height);\r\n      });\r\n    },\r\n\r\n    createAxes(scene) {\r\n      const axisLength = 1.0;\r\n      const arrowLength = 0.2;\r\n      const arrowHeadLength = 0.05;\r\n      const arrowHeadWidth = 0.05;\r\n\r\n      // X轴：红色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(1, 0, 0),\r\n        0xff0000,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      );\r\n\r\n      // Y轴：绿色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(0, 1, 0),\r\n        0x00ff00,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      );\r\n\r\n      // Z轴：蓝色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(0, 0, 1),\r\n        0x0000ff,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      );\r\n    },\r\n\r\n    createAxis(\r\n      scene,\r\n      direction,\r\n      color,\r\n      axisLength,\r\n      arrowLength,\r\n      arrowHeadLength,\r\n      arrowHeadWidth\r\n    ) {\r\n      // 正半轴箭头\r\n      const arrowHelper = new THREE.ArrowHelper(\r\n        direction,\r\n        new THREE.Vector3(0, 0, 0),\r\n        axisLength,\r\n        color,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      );\r\n      scene.add(arrowHelper);\r\n\r\n      // 负半轴线段\r\n      const lineMaterial = new THREE.LineBasicMaterial({ color: color });\r\n      const lineGeometry = new THREE.BufferGeometry().setFromPoints([\r\n        new THREE.Vector3(0, 0, 0),\r\n        direction.clone().multiplyScalar(-axisLength),\r\n      ]);\r\n      const line = new THREE.Line(lineGeometry, lineMaterial);\r\n      scene.add(line);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 你可以根据需要调整样式 */\r\n</style> -->\r\n\r\n<template>\r\n  <div class=\"three-d-view-container\">\r\n    <div class=\"title\">接入终端位置</div>\r\n    <div class=\"axis-legend\">\r\n      <div class=\"legend-item\">\r\n        <span class=\"axis-color x-axis\" /> X 轴: 前后方向\r\n      </div>\r\n      <div class=\"legend-item\">\r\n        <span class=\"axis-color y-axis\" /> Y 轴: 上下方向\r\n      </div>\r\n      <div class=\"legend-item\">\r\n        <span class=\"axis-color z-axis\" /> Z 轴: 左右方向\r\n      </div>\r\n    </div>\r\n    <div ref=\"threeDView\" class=\"three-d-view\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\nexport default {\r\n  name: 'ThreeDView',\r\n  mounted() {\r\n    this.initThreeDView()\r\n  },\r\n  methods: {\r\n    initThreeDView() {\r\n      // 创建场景\r\n      const scene = new THREE.Scene()\r\n      scene.background = new THREE.Color(0xffffff) // 设置背景为白色\r\n\r\n      // 创建相机\r\n      const camera = new THREE.PerspectiveCamera(\r\n        75,\r\n        this.$refs.threeDView.clientWidth / this.$refs.threeDView.clientHeight,\r\n        0.1,\r\n        1000\r\n      )\r\n      camera.position.set(0, 0.5, 2) // 设置相机位置\r\n      camera.lookAt(new THREE.Vector3(0, 0.5, 0)) // 使相机聚焦在立方体中心\r\n      //  camera.position.z = 2 // 调整相机位置以增加立方体占比\r\n\r\n      // 创建渲染器\r\n      const renderer = new THREE.WebGLRenderer({ alpha: true })\r\n      renderer.setSize(\r\n        this.$refs.threeDView.clientWidth,\r\n        this.$refs.threeDView.clientHeight\r\n      )\r\n      this.$refs.threeDView.appendChild(renderer.domElement)\r\n\r\n      // 创建正方体几何体\r\n      const geometry = new THREE.BoxGeometry(1, 1, 1)\r\n\r\n      // 创建淡青色材质\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: 0xe0ffff, // 淡青色 (light cyan)\r\n        transparent: true,\r\n        opacity: 0.5 // 设置透明度\r\n      })\r\n\r\n      // 创建网格并添加到场景中\r\n      const cube = new THREE.Mesh(geometry, material)\r\n      scene.add(cube)\r\n\r\n      // 创建线框材质并添加到场景中\r\n      const edges = new THREE.EdgesGeometry(geometry)\r\n      const lineMaterial = new THREE.LineBasicMaterial({ color: 0x0000ff }) // 蓝色线条\r\n      const lineSegments = new THREE.LineSegments(edges, lineMaterial)\r\n      lineSegments.position.y = 0.5 // 与立方体位置同步\r\n      scene.add(lineSegments)\r\n\r\n      // 创建三维坐标轴\r\n      this.createAxes(scene)\r\n\r\n      // 创建 OrbitControls 控件\r\n      const controls = new OrbitControls(camera, renderer.domElement)\r\n      controls.enableDamping = true // 启用阻尼效果（惯性）\r\n      controls.dampingFactor = 0.25\r\n      controls.screenSpacePanning = false\r\n      controls.maxPolarAngle = Math.PI / 2\r\n      controls.target.set(0, 0.5, 0) // 将控制目标设置为立方体中心\r\n      controls.update() // 更新控制器，使设置生效\r\n      cube.position.y = 0.5 // 调整立方体的位置，使中心位于底部平面\r\n\r\n      // 渲染循环\r\n      const animate = () => {\r\n        requestAnimationFrame(animate)\r\n\r\n        controls.update() // 仅更新控制器\r\n\r\n        renderer.render(scene, camera)\r\n      }\r\n\r\n      animate()\r\n\r\n      // 窗口调整时更新渲染器和相机\r\n      window.addEventListener('resize', () => {\r\n        const width = this.$refs.threeDView.clientWidth\r\n        const height = this.$refs.threeDView.clientHeight\r\n\r\n        camera.aspect = width / height\r\n        camera.updateProjectionMatrix()\r\n\r\n        renderer.setSize(width, height)\r\n      })// ... Three.js 代码与之前相同\r\n    },\r\n    createAxes(scene) {\r\n      const axisLength = 1.0\r\n      const arrowLength = 0.2\r\n      const arrowHeadLength = 0.05\r\n      const arrowHeadWidth = 0.05\r\n\r\n      // X轴：红色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(1, 0, 0),\r\n        0xff0000,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )\r\n\r\n      // Y轴：绿色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(0, 1, 0),\r\n        0x00ff00,\r\n        axisLength + 0.3,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )\r\n\r\n      // Z轴：蓝色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(0, 0, 1),\r\n        0x0000ff,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )// ... 自定义坐标轴代码与之前相同\r\n    },\r\n    createAxis(\r\n      scene,\r\n      direction,\r\n      color,\r\n      axisLength,\r\n      arrowLength,\r\n      arrowHeadLength,\r\n      arrowHeadWidth\r\n    ) {\r\n      // ... 自定义坐标轴代码与之前相同\r\n      // 正半轴箭头\r\n      const arrowHelper = new THREE.ArrowHelper(\r\n        direction,\r\n        new THREE.Vector3(0, 0, 0),\r\n        axisLength,\r\n        color,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )\r\n      scene.add(arrowHelper)\r\n\r\n      // 负半轴线段\r\n      if (direction.y === 0) {\r\n        const lineMaterial = new THREE.LineBasicMaterial({ color: color })\r\n        const lineGeometry = new THREE.BufferGeometry().setFromPoints([\r\n          new THREE.Vector3(0, 0, 0),\r\n          direction.clone().multiplyScalar(-axisLength)// .add(new THREE.Vector3(0, -0.5, 0))\r\n          // direction.clone().multiplyScalar(-axisLength)\r\n        ])\r\n        const line = new THREE.Line(lineGeometry, lineMaterial)\r\n        scene.add(line)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n  <style scoped>\r\n.three-d-view-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.title {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  z-index: 10;\r\n}\r\n\r\n.axis-legend {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  font-size: 14px;\r\n  z-index: 10;\r\n}\r\n\r\n.title, .axis-legend {\r\n  background-color: rgba(255, 255, 255, 0.8); /* 半透明背景颜色 */\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.legend-item {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.axis-color {\r\n  display: inline-block;\r\n  width: 12px;\r\n  height: 12px;\r\n  margin-right: 5px;\r\n}\r\n\r\n.x-axis {\r\n  background-color: #ff0000; /* X 轴的红色 */\r\n}\r\n\r\n.y-axis {\r\n  background-color: #00ff00; /* Y 轴的绿色 */\r\n}\r\n\r\n.z-axis {\r\n  background-color: #0000ff; /* Z 轴的蓝色 */\r\n}\r\n\r\n.three-d-view {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}