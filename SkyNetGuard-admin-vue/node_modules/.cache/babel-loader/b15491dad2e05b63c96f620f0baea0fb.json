{"remainingRequest":"D:\\qianduan1\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\qianduan1\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\qianduan1\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\qianduan1\\vue-admin-template\\src\\components\\CubeView\\ThreeDView.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\qianduan1\\vue-admin-template\\src\\components\\CubeView\\ThreeDView.vue","mtime":1729146483321},{"path":"D:\\qianduan1\\vue-admin-template\\babel.config.js","mtime":1722767618549},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1722767764221},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1722767764222},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1722767764221},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1722767762512}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["THREE","OrbitControls","name","props","points","Array","data","scene","camera","renderer","raycaster","Raycaster","mouse","Vector2","spheres","hoveredPoint","legalityStatus","time","mounted","initThreeDView","window","addEventListener","onMouseMove","beforeDestroy","removeEventListener","methods","_this","Scene","background","Color","PerspectiveCamera","$refs","threeDView","clientWidth","clientHeight","position","set","lookAt","Vector3","WebGLRenderer","alpha","setSize","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","transparent","opacity","cube","Mesh","y","add","edges","EdgesGeometry","lineMaterial","LineBasicMaterial","lineSegments","LineSegments","createAxes","forEach","point","sphereGeometry","OctahedronGeometry","sphereMaterial","MeshPhongMaterial","legal","emissive","emissiveIntensity","shininess","sphere","x","z","push","controls","enableDamping","dampingFactor","screenSpacePanning","maxPolarAngle","Math","PI","target","update","animate","requestAnimationFrame","animateGlowEffect","render","width","height","aspect","updateProjectionMatrix","_this2","scale","sin","event","rect","getBoundingClientRect","clientX","left","clientY","top","setFromCamera","intersects","intersectObjects","length","intersectedObject","object","checkIfPointInCube","isInCube","axisLength","arrowLength","arrowHeadLength","arrowHeadWidth","createAxis","direction","arrowHelper","ArrowHelper","lineGeometry","BufferGeometry","setFromPoints","clone","multiplyScalar","line","Line"],"sources":["src/components/CubeView/ThreeDView.vue"],"sourcesContent":["<!-- <template>\r\n  <div ref=\"threeDView\" style=\"width: 100%; height: 100%\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nexport default {\r\n  name: \"ThreeDView\",\r\n  mounted() {\r\n    this.initThreeDView();\r\n  },\r\n  methods: {\r\n    initThreeDView() {\r\n      // 创建场景\r\n      const scene = new THREE.Scene();\r\n      scene.background = new THREE.Color(0xffffff); // 设置背景为白色\r\n\r\n      // 创建相机\r\n      const camera = new THREE.PerspectiveCamera(\r\n        75,\r\n        this.$refs.threeDView.clientWidth / this.$refs.threeDView.clientHeight,\r\n        0.1,\r\n        1000\r\n      );\r\n      camera.position.z = 2; // 调整相机位置以增加立方体占比\r\n\r\n      // 创建渲染器\r\n      const renderer = new THREE.WebGLRenderer({ alpha: true });\r\n      renderer.setSize(\r\n        this.$refs.threeDView.clientWidth,\r\n        this.$refs.threeDView.clientHeight\r\n      );\r\n      this.$refs.threeDView.appendChild(renderer.domElement);\r\n\r\n      // 创建正方体几何体\r\n      const geometry = new THREE.BoxGeometry(1, 1, 1);\r\n\r\n      // 创建淡青色材质\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: 0xe0ffff, // 淡青色 (light cyan)\r\n        transparent: true,\r\n        opacity: 0.5, // 设置透明度\r\n      });\r\n\r\n      // 创建网格并添加到场景中\r\n      const cube = new THREE.Mesh(geometry, material);\r\n      scene.add(cube);\r\n\r\n      // 创建线框材质并添加到场景中\r\n      const edges = new THREE.EdgesGeometry(geometry);\r\n      const lineMaterial = new THREE.LineBasicMaterial({ color: 0x0000ff }); // 蓝色线条\r\n      const lineSegments = new THREE.LineSegments(edges, lineMaterial);\r\n      scene.add(lineSegments);\r\n\r\n      // 创建三维坐标轴\r\n      this.createAxes(scene);\r\n\r\n      // 创建 OrbitControls 控件\r\n      const controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.enableDamping = true; // 启用阻尼效果（惯性）\r\n      controls.dampingFactor = 0.25;\r\n      controls.screenSpacePanning = false;\r\n      controls.maxPolarAngle = Math.PI / 2;\r\n\r\n      // 渲染循环\r\n      const animate = () => {\r\n        requestAnimationFrame(animate);\r\n\r\n        controls.update(); // 仅更新控制器\r\n\r\n        renderer.render(scene, camera);\r\n      };\r\n\r\n      animate();\r\n\r\n      // 窗口调整时更新渲染器和相机\r\n      window.addEventListener(\"resize\", () => {\r\n        const width = this.$refs.threeDView.clientWidth;\r\n        const height = this.$refs.threeDView.clientHeight;\r\n\r\n        camera.aspect = width / height;\r\n        camera.updateProjectionMatrix();\r\n\r\n        renderer.setSize(width, height);\r\n      });\r\n    },\r\n\r\n    createAxes(scene) {\r\n      const axisLength = 1.0;\r\n      const arrowLength = 0.2;\r\n      const arrowHeadLength = 0.05;\r\n      const arrowHeadWidth = 0.05;\r\n\r\n      // X轴：红色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(1, 0, 0),\r\n        0xff0000,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      );\r\n\r\n      // Y轴：绿色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(0, 1, 0),\r\n        0x00ff00,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      );\r\n\r\n      // Z轴：蓝色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(0, 0, 1),\r\n        0x0000ff,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      );\r\n    },\r\n\r\n    createAxis(\r\n      scene,\r\n      direction,\r\n      color,\r\n      axisLength,\r\n      arrowLength,\r\n      arrowHeadLength,\r\n      arrowHeadWidth\r\n    ) {\r\n      // 正半轴箭头\r\n      const arrowHelper = new THREE.ArrowHelper(\r\n        direction,\r\n        new THREE.Vector3(0, 0, 0),\r\n        axisLength,\r\n        color,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      );\r\n      scene.add(arrowHelper);\r\n\r\n      // 负半轴线段\r\n      const lineMaterial = new THREE.LineBasicMaterial({ color: color });\r\n      const lineGeometry = new THREE.BufferGeometry().setFromPoints([\r\n        new THREE.Vector3(0, 0, 0),\r\n        direction.clone().multiplyScalar(-axisLength),\r\n      ]);\r\n      const line = new THREE.Line(lineGeometry, lineMaterial);\r\n      scene.add(line);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 你可以根据需要调整样式 */\r\n</style> -->\r\n\r\n<!-- 2版 -->\r\n\r\n<!-- <template>\r\n  <div class=\"three-d-view-container\">\r\n    <div class=\"title\">接入终端位置</div>\r\n    <div class=\"axis-legend\">\r\n      <div class=\"legend-item\">\r\n        <span class=\"axis-color x-axis\" /> X 轴: 前后方向\r\n      </div>\r\n      <div class=\"legend-item\">\r\n        <span class=\"axis-color y-axis\" /> Y 轴: 上下方向\r\n      </div>\r\n      <div class=\"legend-item\">\r\n        <span class=\"axis-color z-axis\" /> Z 轴: 左右方向\r\n      </div>\r\n    </div>\r\n    <div ref=\"threeDView\" class=\"three-d-view\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\nexport default {\r\n  name: 'ThreeDView',\r\n  mounted() {\r\n    this.initThreeDView()\r\n  },\r\n  methods: {\r\n    initThreeDView() {\r\n      // 创建场景\r\n      const scene = new THREE.Scene()\r\n      scene.background = new THREE.Color(0xffffff) // 设置背景为白色\r\n\r\n      // 创建相机\r\n      const camera = new THREE.PerspectiveCamera(\r\n        75,\r\n        this.$refs.threeDView.clientWidth / this.$refs.threeDView.clientHeight,\r\n        0.1,\r\n        1000\r\n      )\r\n      camera.position.set(0, 0.5, 2) // 设置相机位置\r\n      camera.lookAt(new THREE.Vector3(0, 0.5, 0)) // 使相机聚焦在立方体中心\r\n      //  camera.position.z = 2 // 调整相机位置以增加立方体占比\r\n\r\n      // 创建渲染器\r\n      const renderer = new THREE.WebGLRenderer({ alpha: true })\r\n      renderer.setSize(\r\n        this.$refs.threeDView.clientWidth,\r\n        this.$refs.threeDView.clientHeight\r\n      )\r\n      this.$refs.threeDView.appendChild(renderer.domElement)\r\n\r\n      // 创建正方体几何体\r\n      const geometry = new THREE.BoxGeometry(1, 1, 1)\r\n\r\n      // 创建淡青色材质\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: 0xe0ffff, // 淡青色 (light cyan)\r\n        transparent: true,\r\n        opacity: 0.5 // 设置透明度\r\n      })\r\n\r\n      // 创建网格并添加到场景中\r\n      const cube = new THREE.Mesh(geometry, material)\r\n      scene.add(cube)\r\n\r\n      // 创建线框材质并添加到场景中\r\n      const edges = new THREE.EdgesGeometry(geometry)\r\n      const lineMaterial = new THREE.LineBasicMaterial({ color: 0x0000ff }) // 蓝色线条\r\n      const lineSegments = new THREE.LineSegments(edges, lineMaterial)\r\n      lineSegments.position.y = 0.5 // 与立方体位置同步\r\n      scene.add(lineSegments)\r\n\r\n      // 创建三维坐标轴\r\n      this.createAxes(scene)\r\n\r\n      // 创建 OrbitControls 控件\r\n      const controls = new OrbitControls(camera, renderer.domElement)\r\n      controls.enableDamping = true // 启用阻尼效果（惯性）\r\n      controls.dampingFactor = 0.25\r\n      controls.screenSpacePanning = false\r\n      controls.maxPolarAngle = Math.PI / 2\r\n      controls.target.set(0, 0.5, 0) // 将控制目标设置为立方体中心\r\n      controls.update() // 更新控制器，使设置生效\r\n      cube.position.y = 0.5 // 调整立方体的位置，使中心位于底部平面\r\n\r\n      // 渲染循环\r\n      const animate = () => {\r\n        requestAnimationFrame(animate)\r\n\r\n        controls.update() // 仅更新控制器\r\n\r\n        renderer.render(scene, camera)\r\n      }\r\n\r\n      animate()\r\n\r\n      // 窗口调整时更新渲染器和相机\r\n      window.addEventListener('resize', () => {\r\n        const width = this.$refs.threeDView.clientWidth\r\n        const height = this.$refs.threeDView.clientHeight\r\n\r\n        camera.aspect = width / height\r\n        camera.updateProjectionMatrix()\r\n\r\n        renderer.setSize(width, height)\r\n      })// ... Three.js 代码与之前相同\r\n    },\r\n    createAxes(scene) {\r\n      const axisLength = 1.0\r\n      const arrowLength = 0.2\r\n      const arrowHeadLength = 0.05\r\n      const arrowHeadWidth = 0.05\r\n\r\n      // X轴：红色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(1, 0, 0),\r\n        0xff0000,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )\r\n\r\n      // Y轴：绿色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(0, 1, 0),\r\n        0x00ff00,\r\n        axisLength + 0.3,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )\r\n\r\n      // Z轴：蓝色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(0, 0, 1),\r\n        0x0000ff,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )// ... 自定义坐标轴代码与之前相同\r\n    },\r\n    createAxis(\r\n      scene,\r\n      direction,\r\n      color,\r\n      axisLength,\r\n      arrowLength,\r\n      arrowHeadLength,\r\n      arrowHeadWidth\r\n    ) {\r\n      // ... 自定义坐标轴代码与之前相同\r\n      // 正半轴箭头\r\n      const arrowHelper = new THREE.ArrowHelper(\r\n        direction,\r\n        new THREE.Vector3(0, 0, 0),\r\n        axisLength,\r\n        color,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )\r\n      scene.add(arrowHelper)\r\n\r\n      // 负半轴线段\r\n      if (direction.y === 0) {\r\n        const lineMaterial = new THREE.LineBasicMaterial({ color: color })\r\n        const lineGeometry = new THREE.BufferGeometry().setFromPoints([\r\n          new THREE.Vector3(0, 0, 0),\r\n          direction.clone().multiplyScalar(-axisLength)// .add(new THREE.Vector3(0, -0.5, 0))\r\n          // direction.clone().multiplyScalar(-axisLength)\r\n        ])\r\n        const line = new THREE.Line(lineGeometry, lineMaterial)\r\n        scene.add(line)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.three-d-view-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.title {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  z-index: 10;\r\n}\r\n\r\n.axis-legend {\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  font-size: 10px;\r\n  z-index: 10;\r\n}\r\n\r\n.title, .axis-legend {\r\n  background-color: rgba(255, 255, 255, 0.8); /* 半透明背景颜色 */\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.legend-item {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.axis-color {\r\n  display: inline-block;\r\n  width: 12px;\r\n  height: 12px;\r\n  margin-right: 5px;\r\n}\r\n\r\n.x-axis {\r\n  background-color: #ff0000; /* X 轴的红色 */\r\n}\r\n\r\n.y-axis {\r\n  background-color: #00ff00; /* Y 轴的绿色 */\r\n}\r\n\r\n.z-axis {\r\n  background-color: #0000ff; /* Z 轴的蓝色 */\r\n}\r\n\r\n.three-d-view {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n}\r\n</style> -->\r\n\r\n<!-- 3版 -->\r\n\r\n<template>\r\n  <div class=\"three-d-view-container\">\r\n    <div class=\"title\">接入终端位置</div>\r\n    <div class=\"axis-legend\">\r\n      <div class=\"legend-item\">\r\n        <span class=\"axis-color x-axis\" /> X 轴: 前后方向\r\n      </div>\r\n      <div class=\"legend-item\">\r\n        <span class=\"axis-color y-axis\" /> Y 轴: 上下方向\r\n      </div>\r\n      <div class=\"legend-item\">\r\n        <span class=\"axis-color z-axis\" /> Z 轴: 左右方向\r\n      </div>\r\n    </div>\r\n    <div ref=\"threeDView\" class=\"three-d-view\" />\r\n    <!-- 坐标和合法性展示 -->\r\n    <div v-if=\"hoveredPoint\" class=\"info-box\">\r\n      X:{{ hoveredPoint.x.toFixed(2) }}, Y:{{ hoveredPoint.y.toFixed(2) }}, Z:{{ hoveredPoint.z.toFixed(2) }} - {{ legalityStatus }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\nexport default {\r\n  name: 'ThreeDView',\r\n  props: {\r\n    // eslint-disable-next-line vue/require-default-prop\r\n    points: Array // 从父组件接收的点的坐标\r\n  },\r\n  data() {\r\n    return {\r\n      scene: null,\r\n      camera: null,\r\n      renderer: null,\r\n      raycaster: new THREE.Raycaster(),\r\n      mouse: new THREE.Vector2(),\r\n      spheres: [], // 保存生成的点\r\n      hoveredPoint: null, // 当前鼠标悬停的点\r\n      legalityStatus: '', // 合法性状态\r\n      time: 0 // 用于闪烁效果的计时器\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initThreeDView()\r\n    window.addEventListener('mousemove', this.onMouseMove, false) // 监听鼠标移动事件\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('mousemove', this.onMouseMove, false) // 移除鼠标事件监听器\r\n  },\r\n  methods: {\r\n    initThreeDView() {\r\n      // 创建场景\r\n      this.scene = new THREE.Scene()\r\n      this.scene.background = new THREE.Color(0xffffff) // 设置背景为白色\r\n\r\n      // 创建相机\r\n      this.camera = new THREE.PerspectiveCamera(\r\n        75,\r\n        this.$refs.threeDView.clientWidth / this.$refs.threeDView.clientHeight,\r\n        0.1,\r\n        1000\r\n      )\r\n      this.camera.position.set(0, 1, 2) // 设置相机位置\r\n      this.camera.lookAt(new THREE.Vector3(0, 0.5, 0)) // 使相机聚焦在立方体底面中心\r\n\r\n      // 创建渲染器\r\n      this.renderer = new THREE.WebGLRenderer({ alpha: true })\r\n      this.renderer.setSize(\r\n        this.$refs.threeDView.clientWidth,\r\n        this.$refs.threeDView.clientHeight\r\n      )\r\n      this.$refs.threeDView.appendChild(this.renderer.domElement)\r\n\r\n      // 创建立方体：原点在底面中心\r\n      const geometry = new THREE.BoxGeometry(1, 1, 1)\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: 0xe0ffff, // 淡青色 (light cyan)\r\n        transparent: true,\r\n        opacity: 0.5 // 设置透明度\r\n      })\r\n      const cube = new THREE.Mesh(geometry, material)\r\n      cube.position.y = 0.5 // 将立方体的底面放置在 y = 0 平面上\r\n      this.scene.add(cube)\r\n\r\n      // 创建线框材质并添加到场景中\r\n      const edges = new THREE.EdgesGeometry(geometry)\r\n      const lineMaterial = new THREE.LineBasicMaterial({ color: 0x0000ff }) // 蓝色线条\r\n      const lineSegments = new THREE.LineSegments(edges, lineMaterial)\r\n      lineSegments.position.y = 0.5 // 与立方体位置同步\r\n      this.scene.add(lineSegments)\r\n\r\n      // 创建三维坐标轴\r\n      this.createAxes(this.scene)\r\n\r\n      // 添加发光小点\r\n      this.points.forEach(point => {\r\n        // 创建闪烁的发光小点\r\n        // const sphereGeometry = new THREE.SphereGeometry(0.05, 32, 32) // 点的大小\r\n        const sphereGeometry = new THREE.OctahedronGeometry(0.05) // 八面体，大小为0.1\r\n        const sphereMaterial = new THREE.MeshPhongMaterial({\r\n          color: point.legal ? 0x00ff00 : 0xff0000, // 合法的点为绿色，非法为红色\r\n          emissive: point.legal ? 0x00ff00 : 0xff0000, // 设置发光颜色\r\n          emissiveIntensity: 1.5, // 设置发光强度\r\n          shininess: 50 // 增加表面亮度\r\n        })\r\n        const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial)\r\n        sphere.position.set(point.position.x, point.position.y, point.position.z)\r\n        this.spheres.push(sphere)\r\n        this.scene.add(sphere)\r\n      })\r\n\r\n      // 创建 OrbitControls 控件\r\n      const controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n      controls.enableDamping = true // 启用阻尼效果（惯性）\r\n      controls.dampingFactor = 0.25\r\n      controls.screenSpacePanning = false\r\n      controls.maxPolarAngle = Math.PI / 2\r\n      controls.target.set(0, 0.5, 0) // 将控制目标设置为立方体中心\r\n      controls.update() // 更新控制器\r\n\r\n      // 渲染循环\r\n      const animate = () => {\r\n        requestAnimationFrame(animate)\r\n        controls.update() // 更新控制器\r\n        this.animateGlowEffect() // 调用发光动画\r\n        this.renderer.render(this.scene, this.camera)\r\n      }\r\n\r\n      animate()\r\n\r\n      // 窗口调整时更新渲染器和相机\r\n      window.addEventListener('resize', () => {\r\n        const width = this.$refs.threeDView.clientWidth\r\n        const height = this.$refs.threeDView.clientHeight\r\n        this.camera.aspect = width / height\r\n        this.camera.updateProjectionMatrix()\r\n        this.renderer.setSize(width, height)\r\n      })\r\n    },\r\n\r\n    // 动态更新闪烁效果\r\n    animateGlowEffect() {\r\n      this.time += 0.02 // 增加时间，减慢速度\r\n\r\n      // 动态调整球体发光强度，减少闪烁幅度\r\n      this.spheres.forEach(sphere => {\r\n        const scale = 1 + Math.sin(this.time) * 0.1 // 通过正弦波动态调整大小，减少幅度\r\n        sphere.scale.set(scale, scale, scale)\r\n      })\r\n    },\r\n\r\n    onMouseMove(event) {\r\n      // 获取容器的尺寸\r\n      const rect = this.$refs.threeDView.getBoundingClientRect()\r\n\r\n      // 计算鼠标位置的归一化设备坐标（NDC）\r\n      this.mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1\r\n      this.mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1\r\n\r\n      // 更新射线\r\n      this.raycaster.setFromCamera(this.mouse, this.camera)\r\n\r\n      // 计算物体和射线的交集\r\n      const intersects = this.raycaster.intersectObjects(this.spheres)\r\n\r\n      if (intersects.length > 0) {\r\n        const intersectedObject = intersects[0].object\r\n        const position = intersectedObject.position\r\n        this.hoveredPoint = position // 记录悬停点的坐标\r\n        this.legalityStatus = this.checkIfPointInCube(position) // 判断合法性\r\n      } else {\r\n        this.hoveredPoint = null // 没有悬停点时清除状态\r\n        this.legalityStatus = ''\r\n      }\r\n    },\r\n\r\n    checkIfPointInCube(position) {\r\n      // 判断是否在立方体内\r\n      const isInCube = (position.x >= -0.5 && position.x <= 0.5) &&\r\n                       (position.y >= 0 && position.y <= 1) && // y 范围是 [0, 1]\r\n                       (position.z >= -0.5 && position.z <= 0.5)\r\n      return isInCube ? '合法' : '非法'\r\n    },\r\n\r\n    createAxes(scene) {\r\n      const axisLength = 1.0\r\n      const arrowLength = 0.2\r\n      const arrowHeadLength = 0.05\r\n      const arrowHeadWidth = 0.05\r\n\r\n      // X轴：红色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(1, 0, 0),\r\n        0xff0000,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )\r\n\r\n      // Y轴：绿色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(0, 1, 0),\r\n        0x00ff00,\r\n        axisLength + 0.3,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )\r\n\r\n      // Z轴：蓝色\r\n      this.createAxis(\r\n        scene,\r\n        new THREE.Vector3(0, 0, 1),\r\n        0x0000ff,\r\n        axisLength,\r\n        arrowLength,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )\r\n    },\r\n\r\n    createAxis(\r\n      scene,\r\n      direction,\r\n      color,\r\n      axisLength,\r\n      arrowLength,\r\n      arrowHeadLength,\r\n      arrowHeadWidth\r\n    ) {\r\n      // 正半轴箭头\r\n      const arrowHelper = new THREE.ArrowHelper(\r\n        direction,\r\n        new THREE.Vector3(0, 0, 0),\r\n        axisLength,\r\n        color,\r\n        arrowHeadLength,\r\n        arrowHeadWidth\r\n      )\r\n      scene.add(arrowHelper)\r\n\r\n      // 负半轴线段\r\n      if (direction.y === 0) {\r\n        const lineMaterial = new THREE.LineBasicMaterial({ color: color })\r\n        const lineGeometry = new THREE.BufferGeometry().setFromPoints([\r\n          new THREE.Vector3(0, 0, 0),\r\n          direction.clone().multiplyScalar(-axisLength)\r\n        ])\r\n        const line = new THREE.Line(lineGeometry, lineMaterial)\r\n        scene.add(line)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.three-d-view-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.title {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  z-index: 10;\r\n}\r\n\r\n.axis-legend {\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  font-size: 10px;\r\n  z-index: 10;\r\n}\r\n\r\n.title,\r\n.axis-legend {\r\n  background-color: rgba(255, 255, 255, 0.8); /* 半透明背景颜色 */\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.legend-item {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.axis-color {\r\n  display: inline-block;\r\n  width: 12px;\r\n  height: 12px;\r\n  margin-right: 5px;\r\n}\r\n\r\n.x-axis {\r\n  background-color: #ff0000; /* X 轴的红色 */\r\n}\r\n\r\n.y-axis {\r\n  background-color: #00ff00; /* Y 轴的绿色 */\r\n}\r\n\r\n.z-axis {\r\n  background-color: #0000ff; /* Z 轴的蓝色 */\r\n}\r\n\r\n.three-d-view {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n}\r\n\r\n.info-box {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n  /* transform: translateX(-50%); */\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  z-index: 10;\r\n  /* box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2); */\r\n  font-weight: 600;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}