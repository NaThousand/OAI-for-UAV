{"remainingRequest":"D:\\qianduan1\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\qianduan1\\vue-admin-template\\src\\views\\dashboard\\admin\\components\\ReliefMap.vue?vue&type=style&index=0&id=c0344832&scoped=true&lang=css","dependencies":[{"path":"D:\\qianduan1\\vue-admin-template\\src\\views\\dashboard\\admin\\components\\ReliefMap.vue","mtime":1729146065978},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\css-loader\\dist\\cjs.js","mtime":1722767762650},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1722767762557},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\postcss-loader\\src\\index.js","mtime":1722767762493},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1722767764221},{"path":"D:\\qianduan1\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1722767762512}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5wYWdlLXdyYXBwZXIgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOyAvKiDog4zmma/popzoibIgKi8NCiAgd2lkdGg6IDEwMCU7DQogIGhlaWdodDogMzAwcHg7IC8qIOS/neaMgeeItuWuueWZqOmrmOW6puS4jeWPmCAqLw0KICBkaXNwbGF5OiBmbGV4Ow0KICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyAvKiDorqnmjInpkq7lkowzROWuueWZqOWeguebtOaOkuWIlyAqLw0KICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgLyog5rC05bmz5bGF5LitICovDQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIOWeguebtOWxheS4rSAqLw0KfQ0KDQouYnV0dG9uLWNvbnRhaW5lciB7DQogIG1hcmdpbi10b3A6IDEwcHg7IC8qIOaMiemSruS4juWcsOWbvuS5i+mXtOeahOmXtOi3nSAqLw0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgLyog5rC05bmz5bGF5Lit5oyJ6ZKuICovDQp9DQoNCmJ1dHRvbiB7DQogIG1hcmdpbjogMCA0MHB4Ow0KICBwYWRkaW5nOiAycHggMTVweDsNCiAgYm9yZGVyOiBub25lOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGUwOw0KICBjdXJzb3I6IHBvaW50ZXI7DQogIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlOw0KfQ0KDQpidXR0b246aG92ZXIgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjOw0KfQ0KDQpidXR0b24uYWN0aXZlIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjsNCiAgY29sb3I6IHdoaXRlOw0KfQ0KDQoudGhyZWUtZC1jb250YWluZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgd2lkdGg6IDEwMCU7DQogIGhlaWdodDogMTAwJTsNCiAgLyog5Y676Zmk5Lu75L2V5YaF5aSW6L656Led77yM5Lul56Gu5L+d5rKh5pyJ6aKd5aSW55qE56m66ZqZICovDQogIG1hcmdpbjogMDsNCiAgcGFkZGluZzogMDsNCn0NCg0KLnRocmVlLWQtY29udGFpbmVyID4gKiB7DQogIHdpZHRoOiAxMDAlOyAvKiDorqnlrZDnu4Tku7bnmoTlrr3luqboh6rpgILlupTniLblrrnlmaggKi8NCiAgaGVpZ2h0OiAxMDAlOyAvKiDorqnlrZDnu4Tku7bnmoTpq5jluqboh6rpgILlupTniLblrrnlmaggKi8NCiAgZmxleC1ncm93OiAxOyAvKiDnoa7kv53lrZDnu4Tku7bloavmu6HmlbTkuKrlrrnlmaggKi8NCiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyog56Gu5L+d5a695bqm6K6h566X5q2j56GuICovDQp9DQo="},{"version":3,"sources":["ReliefMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ReliefMap.vue","sourceRoot":"src/views/dashboard/admin/components","sourcesContent":["<!-- <template>\r\n  <div class=\"page-wrapper\">\r\n    <div class=\"three-d-container\">\r\n      <ThreeDView />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ThreeDView from '@/components/CubeView/ThreeDView.vue'\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  components: {\r\n    ThreeDView\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-wrapper {\r\n  background-color: #ffffff; /* 背景颜色 */\r\n  width: 100%;\r\n  height: 300px; /* 保持父容器高度不变 */\r\n  display: flex;\r\n  justify-content: center; /* 水平居中 */\r\n  align-items: center; /* 垂直居中 */\r\n}\r\n\r\n.three-d-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  /* 去除任何内外边距，以确保没有额外的空隙 */\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.three-d-container > * {\r\n  width: 100%; /* 让子组件的宽度自适应父容器 */\r\n  height: 100%; /* 让子组件的高度自适应父容器 */\r\n  flex-grow: 1; /* 确保子组件填满整个容器 */\r\n  box-sizing: border-box; /* 确保宽度计算正确 */\r\n}\r\n</style> -->\r\n\r\n<!-- 二版 -->\r\n\r\n<!-- <template>\r\n  <div class=\"page-wrapper\">\r\n    <div class=\"three-d-container\">\r\n      <ThreeDView v-if=\"activeView === '3d'\" />\r\n      <FlatView v-if=\"activeView === 'flat'\" />\r\n    </div>\r\n\r\n    <div class=\"button-container\">\r\n      <button :class=\"{ active: activeView === '3d' }\" @click=\"switchView('3d')\">立体</button>\r\n      <button :class=\"{ active: activeView === 'flat' }\" @click=\"switchView('flat')\">平面</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ThreeDView from '@/components/CubeView/ThreeDView.vue'\r\nimport FlatView from '@/components/CubeView/FlatView.vue' // 导入新的平面视图组件\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  components: {\r\n    ThreeDView,\r\n    FlatView // 注册平面视图组件\r\n  },\r\n  data() {\r\n    return {\r\n      activeView: '3d' // 初始显示3D视图\r\n    }\r\n  },\r\n  methods: {\r\n    // 切换视图的方法\r\n    switchView(view) {\r\n      this.activeView = view\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.page-wrapper {\r\n  background-color: #ffffff; /* 背景颜色 */\r\n  width: 100%;\r\n  height: 300px; /* 保持父容器高度不变 */\r\n  display: flex;\r\n  flex-direction: column; /* 让按钮和3D容器垂直排列 */\r\n  justify-content: center; /* 水平居中 */\r\n  align-items: center; /* 垂直居中 */\r\n}\r\n\r\n.button-container {\r\n  margin-top: 10px; /* 按钮与地图之间的间距 */\r\n  display: flex;\r\n  justify-content: center; /* 水平居中按钮 */\r\n}\r\n\r\nbutton {\r\n  margin: 0 40px;\r\n  padding: 2px 15px;\r\n  border: none;\r\n  background-color: #e0e0e0;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #ccc;\r\n}\r\n\r\nbutton.active {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.three-d-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  /* 去除任何内外边距，以确保没有额外的空隙 */\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.three-d-container > * {\r\n  width: 100%; /* 让子组件的宽度自适应父容器 */\r\n  height: 100%; /* 让子组件的高度自适应父容器 */\r\n  flex-grow: 1; /* 确保子组件填满整个容器 */\r\n  box-sizing: border-box; /* 确保宽度计算正确 */\r\n}\r\n</style> -->\r\n<!-- 3版 -->\r\n<template>\r\n  <div class=\"page-wrapper\">\r\n    <div class=\"three-d-container\">\r\n      <ThreeDView v-if=\"activeView === '3d'\" :show-coordinates=\"showCoordinates\" :points=\"points\" />\r\n      <FlatView v-if=\"activeView === 'flat'\" />\r\n    </div>\r\n\r\n    <!-- 按钮放置在地图的正下方 -->\r\n    <div class=\"button-container\">\r\n      <button :class=\"{ active: activeView === '3d' }\" @click=\"switchView('3d')\">立体</button>\r\n      <button :class=\"{ active: activeView === 'flat' }\" @click=\"switchView('flat')\">平面</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ThreeDView from '@/components/CubeView/ThreeDView.vue'\r\nimport FlatView from '@/components/CubeView/FlatView.vue' // 导入新的平面视图组件\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  components: {\r\n    ThreeDView,\r\n    FlatView // 注册平面视图组件\r\n  },\r\n  data() {\r\n    return {\r\n      activeView: '3d', // 初始显示3D视图\r\n      showCoordinates: '', // 用于显示鼠标悬停时的坐标和合法性\r\n      points: [ // 定义两个固定点的坐标\r\n        { position: { x: 0.2, y: 0.3, z: -0.3 }, legal: true }, // 点1在正方体内\r\n        { position: { x: 0.6, y: 0.6, z: 0.6 }, legal: false } // 点2在正方体外\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    // 切换视图的方法\r\n    switchView(view) {\r\n      this.activeView = view\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-wrapper {\r\n  background-color: #ffffff; /* 背景颜色 */\r\n  width: 100%;\r\n  height: 300px; /* 保持父容器高度不变 */\r\n  display: flex;\r\n  flex-direction: column; /* 让按钮和3D容器垂直排列 */\r\n  justify-content: center; /* 水平居中 */\r\n  align-items: center; /* 垂直居中 */\r\n}\r\n\r\n.button-container {\r\n  margin-top: 10px; /* 按钮与地图之间的间距 */\r\n  display: flex;\r\n  justify-content: center; /* 水平居中按钮 */\r\n}\r\n\r\nbutton {\r\n  margin: 0 40px;\r\n  padding: 2px 15px;\r\n  border: none;\r\n  background-color: #e0e0e0;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #ccc;\r\n}\r\n\r\nbutton.active {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.three-d-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  /* 去除任何内外边距，以确保没有额外的空隙 */\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.three-d-container > * {\r\n  width: 100%; /* 让子组件的宽度自适应父容器 */\r\n  height: 100%; /* 让子组件的高度自适应父容器 */\r\n  flex-grow: 1; /* 确保子组件填满整个容器 */\r\n  box-sizing: border-box; /* 确保宽度计算正确 */\r\n}\r\n</style>\r\n"]}]}