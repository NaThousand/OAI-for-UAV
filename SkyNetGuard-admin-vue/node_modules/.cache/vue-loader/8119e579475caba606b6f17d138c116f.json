{"remainingRequest":"D:\\qianduan1\\SkyNetGuard-admin-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\qianduan1\\SkyNetGuard-admin-vue\\src\\views\\dashboard\\admin\\components\\TransactionTable.vue?vue&type=style&index=0&id=4d25bee4&scoped=true&lang=css","dependencies":[{"path":"D:\\qianduan1\\SkyNetGuard-admin-vue\\src\\views\\dashboard\\admin\\components\\TransactionTable.vue","mtime":1729071020469},{"path":"D:\\qianduan1\\SkyNetGuard-admin-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1722767762650},{"path":"D:\\qianduan1\\SkyNetGuard-admin-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1722767762557},{"path":"D:\\qianduan1\\SkyNetGuard-admin-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1722767762493},{"path":"D:\\qianduan1\\SkyNetGuard-admin-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1722767764221},{"path":"D:\\qianduan1\\SkyNetGuard-admin-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1722767762512}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi8qIOiuvue9ruihqOagvOWbuuWumumrmOW6puWPiua7muWKqOadoeagt+W8jyAqLw0KLmVsLXRhYmxlIHsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsgIC8qIOmakOiXj+m7mOiupOeahG92ZXJmbG93ICovDQogIGhlaWdodDogMTAwJTsgLyog6K6p6KGo5qC85Y2g5ruh5Zu65a6a6auY5bqm55qE5a655ZmoICovDQp9DQoNCi5lbC10YWJsZV9fYm9keS13cmFwcGVyIHsNCiAgbWF4LWhlaWdodDogNDAwcHg7IC8qIOaOp+WItuihqOagvOeahOacgOWkp+mrmOW6puS4ujQwMHB477yM5b2T6LaF5Ye65pe25pi+56S65rua5Yqo5p2hICovDQogIG92ZXJmbG93LXk6IGF1dG87ICAvKiDlkK/nlKjlnoLnm7TmlrnlkJHnmoTmu5rliqjmnaEgKi8NCn0NCg0K"},{"version":3,"sources":["TransactionTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TransactionTable.vue","sourceRoot":"src/views/dashboard/admin/components","sourcesContent":["<!-- <template>\r\n  <el-table :data=\"list\" style=\"width: 100%;padding-top: 15px;\">\r\n    <el-table-column label=\"Order_No\" min-width=\"200\">\r\n      <template slot-scope=\"scope\">\r\n        {{ scope.row.order_no | orderNoFilter }}\r\n      </template>\r\n    </el-table-column>\r\n    <el-table-column label=\"Price\" width=\"195\" align=\"center\">\r\n      <template slot-scope=\"scope\">\r\n        ¥{{ scope.row.price | toThousandFilter }}\r\n      </template>\r\n    </el-table-column>\r\n    <el-table-column label=\"Status\" width=\"100\" align=\"center\">\r\n      <template slot-scope=\"{row}\">\r\n        <el-tag :type=\"row.status | statusFilter\">\r\n          {{ row.status }}\r\n        </el-tag>\r\n      </template>\r\n    </el-table-column>\r\n  </el-table>\r\n</template>\r\n\r\n<script>\r\nimport { transactionList } from '@/api/remote-search'\r\n\r\nexport default {\r\n  filters: {\r\n    statusFilter(status) {\r\n      const statusMap = {\r\n        success: 'success',\r\n        pending: 'danger'\r\n      }\r\n      return statusMap[status]\r\n    },\r\n    orderNoFilter(str) {\r\n      return str.substring(0, 30)\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: null\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      transactionList().then(response => {\r\n        this.list = response.data.items.slice(0, 8)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script> -->\r\n<template>\r\n  <el-table\r\n    :data=\"list\"\r\n    style=\"width: 100%; padding-top: 15px;\"\r\n    height=\"460\"\r\n    border\r\n  >\r\n    <el-table-column label=\"Order_No\" min-width=\"200\">\r\n      <template slot-scope=\"scope\">\r\n        {{ scope.row.order_no | orderNoFilter }}\r\n      </template>\r\n    </el-table-column>\r\n    <el-table-column label=\"Price\" width=\"195\" align=\"center\">\r\n      <template slot-scope=\"scope\">\r\n        ¥{{ scope.row.price | toThousandFilter }}\r\n      </template>\r\n    </el-table-column>\r\n    <el-table-column label=\"Status\" width=\"100\" align=\"center\">\r\n      <template slot-scope=\"{ row }\">\r\n        <el-tag :type=\"row.status | statusFilter\">\r\n          {{ row.status }}\r\n        </el-tag>\r\n      </template>\r\n    </el-table-column>\r\n  </el-table>\r\n</template>\r\n\r\n<script>\r\nimport { transactionList } from '@/api/remote-search'\r\n\r\nexport default {\r\n  filters: {\r\n    statusFilter(status) {\r\n      const statusMap = {\r\n        success: 'success',\r\n        pending: 'danger'\r\n      }\r\n      return statusMap[status]\r\n    },\r\n    orderNoFilter(str) {\r\n      return str.substring(0, 30)\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: null\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      transactionList().then(response => {\r\n        this.list = response.data.items.slice(0, 8) // 获取最多8条记录\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 设置表格固定高度及滚动条样式 */\r\n.el-table {\r\n  overflow: hidden;  /* 隐藏默认的overflow */\r\n  height: 100%; /* 让表格占满固定高度的容器 */\r\n}\r\n\r\n.el-table__body-wrapper {\r\n  max-height: 400px; /* 控制表格的最大高度为400px，当超出时显示滚动条 */\r\n  overflow-y: auto;  /* 启用垂直方向的滚动条 */\r\n}\r\n\r\n</style>\r\n"]}]}